# file    : metapost.properties
# version : 18 august 2003
# author  : Hans Hagen / PRAGMA ADE / www.pragma-ade.com

# Metapost: patterns

file.patterns.metapost=*.mp;*.mpx
file.patterns.metafun=*.mp;*.mpx;*.mpy

filter.metapost=MetaPost (mp mpx)|$(file.patterns.metapost)|
filter.metafun=MetaFun (mp mpx mpy)|$(file.patterns.metafun)|

*filter.metapost=$(filter.metapost)

lexer.$(file.patterns.metapost)=metapost
lexer.$(file.patterns.metafun)=metapost

*language.metapost=MetaPost|mp||

# Metapost: commands (check process view)

command.compile.$(file.patterns.metapost)=
command.build.$(file.patterns.metapost)=mpost $(FileNameExt)
command.go.$(file.patterns.metapost)=gv $(FileName).1

command.compile.$(file.patterns.metafun)=
command.build.$(file.patterns.metafun)=texexec --mptex $(FileNameExt)
command.go.$(file.patterns.metafun)=gv $(FileName).1

command.0.$(file.patterns.metapost)=
command.1.$(file.patterns.metapost)=
command.2.$(file.patterns.metapost)=
command.3.$(file.patterns.metapost)=
command.4.$(file.patterns.metapost)=
command.5.$(file.patterns.metapost)=
command.6.$(file.patterns.metapost)=
command.7.$(file.patterns.metapost)=
command.8.$(file.patterns.metapost)=
command.9.$(file.patterns.metapost)=

command.0.$(file.patterns.metafun)=
command.1.$(file.patterns.metafun)=
command.2.$(file.patterns.metafun)=
command.3.$(file.patterns.metafun)=
command.4.$(file.patterns.metafun)=
command.5.$(file.patterns.metafun)=
command.6.$(file.patterns.metafun)=
command.7.$(file.patterns.metafun)=
command.8.$(file.patterns.metafun)=
command.9.$(file.patterns.metafun)=

# Metapost: highlighting

# Default
style.metapost.0=fore:#3F3F3F
# Special
style.metapost.1=fore:#007F7F
# Group
style.metapost.2=fore:#7F0000
# Symbol
style.metapost.3=fore:#7F7F00
# Command
style.metapost.4=fore:#007F00
# Text
style.metapost.5=fore:#000000
# Extra
style.metapost.6=fore:#007F00,italics

style.metapost.34=fore:#00007F
style.metapost.35=fore:#7F007F

# Metapost: comments

comment.block.metapost=%
comment.block.at.line.start.metapost=1

# Metapost: lexer.metapost.interface.default
#
# 0 not used
# 1 metapost primitives and commands
# 2 metafun macros
#
# first lines of a metapost file are interpreted as follows:
#
# % interface=none|metapost|mp|metafun

lexer.metapost.interface.default=1

# Metapost: lexer.metapost.comment.process
#
# 0 don't interpret comment
# 1 color comment like source code

lexer.metapost.comment.process=0

# Metapost: keywords

keywordclass.metapost.tex=\
    btex verbatimtex etex

keywordclass.metapost.primitives=\
    charcode day linecap linejoin miterlimit month pausing \
    prologues showstopping time tracingcapsules tracingchoices \
    tracingcommands tracingequations tracinglostchars \
    tracingmacros tracingonline tracingoutput tracingrestores \
    tracingspecs tracingstats tracingtitles truecorners \
    warningcheck year \
    false nullpicture pencircle true \
    and angle arclength arctime ASCII bluepart boolean bot \
    char color cosd cycle decimal directiontime floor fontsize \
    greenpart hex infont intersectiontimes known length llcorner \
    lrcorner makepath makepen mexp mlog normaldeviate not \
    numeric oct odd or path pair pen penoffset picture point \
    postcontrol precontrol redpart reverse rotated scaled \
    shifted sind slanted sqrt str string subpath substring \
    transform transformed ulcorner uniformdeviate unknown \
    urcorner xpart xscaled xxpart xypart ypart yscaled yxpart \
    yypart zscaled \
    addto clip input interim let newinternal save setbounds \
    shipout show showdependencies showtoken showvariable \
    special \
    begingroup endgroup of curl tension and controls \
    reflectedabout rotatedaround interpath on off beginfig \
    endfig def vardef enddef epxr suffix text primary secondary \
    tertiary primarydef secondarydef tertiarydef top bottom \
    ulft urt llft lrt randomseed also contour doublepath \
    withcolor withpen dashed if else elseif fi for endfor forever exitif \
    forsuffixes downto upto step until \
    charlist extensible fontdimen headerbyte kern ligtable \
    boundarychar chardp charext charht charic charwd designsize \
    fontmaking charexists \
    cullit currenttransform gfcorners grayfont hround \
    imagerules lowres_fix nodisplays notransforms openit \
    displaying currentwindow screen_rows screen_cols \
    pixels_per_inch cull display openwindow numspecial \
    totalweight autorounding fillin proofing tracingpens \
    xoffset chardx granularity smoothing turningcheck yoffset \
    chardy hppp tracingedges vppp \
    extra_beginfig extra_endfig mpxbreak \
    end

keywordclass.metapost.plain=\
    ahangle ahlength bboxmargin defaultpen defaultscale \
    labeloffset background currentpen currentpicture cuttings \
    defaultfont extra_beginfig extra_endfig \
    beveled black blue bp butt cc cm dd ditto down epsilon \
    evenly fullcircle green halfcircle identity in infinity left \
    mitered mm origin pensquare pt quartercircle red right \
    rounded squared unitsquare up white withdots \
    abs bbox ceiling center cutafter cutbefore dir \
    directionpoint div dotprod intersectionpoint inverse mod lft \
    round rt unitvector whatever \
    cutdraw draw drawarrow drawdblarrow fill filldraw drawdot \
    loggingall pickup tracingall tracingnone undraw unfill \
    unfilldraw \
    buildcycle dashpattern decr dotlabel dotlabels drawoptions \
    incr label labels max min thelabel z \
    beginchar blacker capsule_end change_width \
    define_blacker_pixels define_corrected_pixels \
    define_good_x_pixels define_good_y_pixels \
    define_horizontal_corrected_pixels define_pixels \
    define_whole_blacker_pixels define_whole_pixels \
    define_whole_vertical_blacker_pixels \
    define_whole_vertical_pixels endchar extra_beginchar \
    extra_endchar extra_setup font_coding_scheme\
    font_extra_space

keywordclass.metapost.all=\
    $(keywordclass.metapost.tex) \
    $(keywordclass.metapost.primitives) \
    $(keywordclass.metapost.plain)

keywordclass.metafun.all=

keywords.$(file.patterns.metapost)=$(keywordclass.metapost.all)

keywords.$(file.patterns.metafun)=$(keywordclass.metapost.all)
keywords2.$(file.patterns.metafun)=$(keywordclass.metafun.all)

##  Metapost fold points
## keywords4  = fold beginning; keywords5 = fold ending.
keywords4.$(file.patterns.metapost)=beginfig for verbatimtex def begingroup \
    if btex forsuffixes vardef primarydef
keywords5.$(file.patterns.metapost)=etex fi endfig endgroup end endfor endif \
    enddef

import metafun-scite.properties

# Metapost: end of file