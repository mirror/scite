# Define SciTE settings for Basser Lout files.
# Based on Lout 3.35 [April 2007]
# * to update keywords, see or diff externs.h

file.patterns.lout=*.lt

filter.lout=Lout (lt)|*.lt|

*filter.lout=$(filter.lout)

lexer.$(file.patterns.lout)=lout

*language.lout=Lout|lt||

# @-prefixed keywords
keywords.$(file.patterns.lout)= \
@OptGall @FontDef @Family @Face @Name @Metrics @ExtraMetrics \
@Mapping @Recode @Filter @FilterIn @FilterOut @FilterErr \
@Common @Rump @Meld @Insert @OneOf @Next @Plus @Minus @Wide \
@High @HShift @VShift @BeginHeaderComponent @EndHeaderComponent \
@SetHeaderComponent @ClearHeaderComponent @OneCol @OneRow \
@HMirror @VMirror @HScale @VScale @HCover @VCover @Scale \
@KernShrink @HContract @VContract @HLimited @VLimited @HExpand \
@VExpand @StartHVSpan @StartHSpan @StartVSpan @HSpan @VSpan \
@PAdjust @HAdjust @VAdjust @Rotate @Background @IncludeGraphic \
@SysIncludeGraphic @Graphic @LinkSource @LinkDest @URLLink \
@PlainGraphic @Verbatim @RawVerbatim @Case @Yield @BackEnd \
@Char @Font @Space @YUnit @ZUnit @Break @Underline @SetColour \
@SetColor @SetUnderlineColour @SetUnderlineColor @SetTexture \
@Outline @Language @CurrLang @CurrFamily @CurrFace @CurrYUnit \
@CurrZUnit @LEnv @@A @@B @@C @@D @@E @LClos @@V @LUse @LEO \
@Open @Use @NotRevealed @Tagged @Database @SysDatabase \
@Include @SysInclude @IncludeGraphicRepeated \
@SysIncludeGraphicRepeated @PrependGraphic @SysPrependGraphic \
@Target @Null @PageLabel @Galley @ForceGalley @LInput @Split \
@Tag @Key @Optimize @Merge @Enclose @Begin @End @Moment \
@Second @Minute @Hour @Day @Month @Year @Century @WeekDay \
@YearDay @DaylightSaving @SetContext @GetContext

# symbols that are keywords (excluding braces)
keywords2.$(file.patterns.lout)= &&& && & ^// ^/ ^|| ^| ^& // / || |

# non-@-prefixed keywords
keywords3.$(file.patterns.lout)= def langdef force horizontally into \
extend import export precedence associativity left right body macro \
named compulsory following preceding foll_or_prec now

comment.block.lout=#~

indent.maintain.$(file.patterns.lout)=1

# Lout styles

# Default
style.lout.32=$(font.base)
# White space
style.lout.0=fore:#808080
# Comment
style.lout.1=$(colour.code.comment.line),$(font.code.comment.line)
# Number
style.lout.2=$(colour.number)
# Keyword (@-prefixed keywords)
style.lout.3=$(colour.keyword),bold
# Keyword2 (symbol keywords)
style.lout.4=$(colour.keyword),bold
# Keyword3 (non-@ keywords)
style.lout.5=$(colour.keyword),bold
# Keyword4 (user or library symbols)
style.lout.6=$(colour.keyword)
# Double quoted string
style.lout.7=$(colour.string)
# Operators
style.lout.8=$(colour.operator),bold
# Identifiers
style.lout.9=
# End of line where string is not closed
style.lout.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Braces are only matched in operator style
braces.lout.style=8

command.compile.$(file.patterns.lout)=lout "$(FileNameExt)" > "$(FileName).ps"
command.build.$(file.patterns.lout)=make

if PLAT_WIN
	command.go.$(file.patterns.lout)=gview "$(FileName).ps"

if PLAT_GTK
	command.go.$(file.patterns.lout)=gview32 "$(FileName).ps"

