# Define SciTE settings for PureBasic files.

file.patterns.purebasic=*.pb

filter.purebasic=PureBasic (pb)|$(file.patterns.purebasic)|

*filter.purebasic=$(filter.purebasic)

lexer.$(file.patterns.purebasic)=purebasic

# keywords must be all lowercase

#Language
keywords.$(file.patterns.purebasic)=and break case continue data \
datasection declare declarecdll declaredll default deftype dim else \
elseif end enddatasection endenumeration endif endinterface endprocedure \
endselect endstructure endstructureunion enumeration extends fakereturn \
for foreach forever global gosub goto if includebinary includefile \
includepath interface newlist next or procedure procedurecdll \
proceduredll procedurereturn protected read repeat restore return select \
shared static step structure structureunion to until wend while xincludefile

#preprocessor
keywords2.$(file.patterns.purebasic)=compilercase compilerdefault \
compilerelse compilerendif compilerendselect compilerif compilerselect

# PB styles
# Default
style.purebasic.0=fore:#000000
# Comment
style.purebasic.1=$(colour.code.comment.line),$(font.code.comment.line)
# Number
style.purebasic.2=$(colour.number)
# Keyword1
style.purebasic.3=$(colour.keyword)
# String
style.purebasic.4=$(colour.string)
# Preprocessor
# style.purebasic.5=$(colour.error)
# Operator
style.purebasic.6=$(colour.operator)
# Identifier
style.purebasic.7=$(style.purebasic.0)
# Date
# style.purebasic.8=$(colour.error)
# StringEOL
# style.purebasic.9=$(colour.error)
# Keyword2
style.purebasic.10=$(colour.preproc)
# Keyword3
style.purebasic.11=$(colour.keyword)
# Keyword4
style.purebasic.12=$(colour.keyword)
# Constant
style.purebasic.13=$(colour.number)
# Asm
# style.purebasic.14=$(colour.error)
# Label
style.purebasic.15=$(colour.preproc)
# Error
style.purebasic.16=$(colour.error)
# HexNumber
style.purebasic.17=$(colour.number)
# BinNumber
style.purebasic.18=$(colour.number)

