# Define SciTE settings for tcl and itcl files.

file.patterns.tcl=*.tcl;*.exp
file.patterns.itcl=*.itcl
file.patterns.tcl.like=$(file.patterns.tcl);$(file.patterns.itcl);

filter.tcl=Tcl (tcl)|$(file.patterns.tcl)|
filter.itcl=itcl (itcl)|$(file.patterns.itcl)|

*filter.tcl=$(filter.tcl)

lexer.$(file.patterns.tcl)=tcl
lexer.$(file.patterns.itcl)=tcl

*language.tcl=&TCL|tcl||

keywordclass.tcl=after append array auto_execok \
auto_import auto_load auto_load_index auto_qualify \
beep bgerror binary break case catch cd clock \
close concat continue dde default echo else elseif \
encoding eof error eval exec exit expr fblocked \
fconfigure fcopy file fileevent flush for foreach format \
gets glob global history http if incr info \
interp join lappend lindex linsert list llength load \
loadTk lrange lreplace lsearch lset lsort memory msgcat \
namespace open package pid pkg::create pkg_mkIndex Platform-specific proc \
puts pwd re_syntax read regexp registry regsub rename \
resource return scan seek set socket source split \
string subst switch tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell \
time trace unknown unset update uplevel upvar variable \
vwait while

keywordclass.tk=bell bind bindtags bitmap button canvas checkbutton clipboard \
colors console cursors destroy entry event focus font \
frame grab grid image Inter-client keysyms label labelframe \
listbox lower menu menubutton message option options pack \
panedwindow photo place radiobutton raise scale scrollbar selection \
send spinbox text tk tk_chooseColor tk_chooseDirectory tk_dialog tk_focusNext \
tk_getOpenFile tk_messageBox tk_optionMenu tk_popup tk_setPalette tkerror tkvars tkwait \
toplevel winfo wish wm

keywordclass.itcl=@scope body class code common component configbody \
constructor define destructor hull import inherit itcl itk itk_component \
itk_initialize itk_interior itk_option iwidgets keep method \
private protected public

keywordclass.TkCommands=tk_bisque tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \
tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox tk_optionMenu \
tk_popup tk_setPalette tk_textCopy tk_textCut tk_textPaste \
tkButtonAutoInvoke tkButtonDown tkButtonEnter tkButtonInvoke tkButtonLeave \
tkButtonUp tkCancelRepeat tkCheckRadioDown tkCheckRadioEnter tkCheckRadioInvoke \
tkColorDialog tkColorDialog_BuildDialog tkColorDialog_CancelCmd tkColorDialog_Config tkColorDialog_CreateSelector \
tkColorDialog_DrawColorScale tkColorDialog_EnterColorBar tkColorDialog_HandleRGBEntry tkColorDialog_HandleSelEntry tkColorDialog_InitValues \
tkColorDialog_LeaveColorBar tkColorDialog_MoveSelector tkColorDialog_OkCmd tkColorDialog_RedrawColorBars tkColorDialog_RedrawFinalColor \
tkColorDialog_ReleaseMouse tkColorDialog_ResizeColorBars tkColorDialog_RgbToX tkColorDialog_SetRGBValue tkColorDialog_StartMove \
tkColorDialog_XToRgb tkConsoleAbout tkConsoleBind tkConsoleExit tkConsoleHistory \
tkConsoleInit tkConsoleInsert tkConsoleInvoke tkConsoleOutput tkConsolePrompt \
tkConsoleSource tkDarken tkEntryAutoScan tkEntryBackspace tkEntryButton1 \
tkEntryClosestGap tkEntryGetSelection tkEntryInsert tkEntryKeySelect tkEntryMouseSelect \
tkEntryNextWord tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \
tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu tkFocusGroup_BindIn \
tkFocusGroup_BindOut tkFocusGroup_Create tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out \
tkFocusOK tkGenerateMenuSelect tkIconList tkIconList_Add tkIconList_Arrange \
tkIconList_AutoScan tkIconList_Btn1 tkIconList_Config tkIconList_Create tkIconList_CtrlBtn1 \
tkIconList_Curselection tkIconList_DeleteAll tkIconList_Double1 tkIconList_DrawSelection tkIconList_FocusIn \
tkIconList_FocusOut tkIconList_Get tkIconList_Goto tkIconList_Index tkIconList_Invoke \
tkIconList_KeyPress tkIconList_Leave1 tkIconList_LeftRight tkIconList_Motion1 tkIconList_Reset \
tkIconList_ReturnKey tkIconList_See tkIconList_Select tkIconList_Selection tkIconList_ShiftBtn1 \
tkIconList_UpDown tkListbox tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \
tkListboxBeginToggle tkListboxCancel tkListboxDataExtend tkListboxExtendUpDown tkListboxKeyAccel_Goto \
tkListboxKeyAccel_Key tkListboxKeyAccel_Reset tkListboxKeyAccel_Set tkListboxKeyAccel_Unset tkListboxMotion \
tkListboxSelectAll tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave \
tkMbMotion tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup \
tkMenuEscape tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke \
tkMenuLeave tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \
tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox tkMotifFDialog \
tkMotifFDialog_ActivateDList tkMotifFDialog_ActivateFEnt tkMotifFDialog_ActivateFList tkMotifFDialog_ActivateSEnt tkMotifFDialog_BrowseDList \
tkMotifFDialog_BrowseFList tkMotifFDialog_BuildUI tkMotifFDialog_CancelCmd tkMotifFDialog_Config tkMotifFDialog_Create \
tkMotifFDialog_FileTypes tkMotifFDialog_FilterCmd tkMotifFDialog_InterpFilter tkMotifFDialog_LoadFiles tkMotifFDialog_MakeSList \
tkMotifFDialog_OkCmd tkMotifFDialog_SetFilter tkMotifFDialog_SetListMode tkMotifFDialog_Update tkPostOverPoint \
tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo tkScaleActivate tkScaleButton2Down \
tkScaleButtonDown tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \
tkScreenChanged tkScrollButton2Down tkScrollButtonDown tkScrollButtonDrag tkScrollButtonUp \
tkScrollByPages tkScrollByUnits tkScrollDrag tkScrollEndDrag tkScrollSelect \
tkScrollStartDrag tkScrollTopBottom tkScrollToPos tkTabToWindow tkTearOffMenu \
tkTextAutoScan tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \
tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord tkTextPaste \
tkTextPrevPara tkTextPrevPos tkTextPrevWord tkTextResetAnchor tkTextScrollPages \
tkTextSelectTo tkTextSetCursor tkTextTranspose tkTextUpDownLine tkTraverseToMenu \
tkTraverseWithinMenu

keywords.$(file.patterns.tcl.like)=$(keywordclass.tcl)
keywords2.$(file.patterns.tcl.like)=$(keywordclass.tk)
keywords3.$(file.patterns.tcl.like)= $(keywordclass.TkCommands)
keywords4.$(file.patterns.itcl)=$(keywordclass.itcl)
keywords5.$(file.patterns.tcl.like)=expand

comment.block.tcl=#~
# also suported is #- for start/end of box, box.middle # can be in column 1
comment.box.start.tcl=##
comment.box.middle.tcl= #
comment.box.end.tcl= ##

# tcl styles
# Default
style.tcl.32=$(font.base)
# White space
style.tcl.0=fore:#808080
# Comment:.....; #comment
style.tcl.1=$(colour.code.comment.line),$(font.comment),back:#f0FFE0
# Line Comment:  #comment
style.tcl.2=$(colour.code.comment.line),$(font.code.comment.line)
# Number and hex number (syntax #[0-f]+)
style.tcl.3=$(colour.number)
# Keyword in quote
style.tcl.4=$(colour.string),bold,back:#FFF0F0
# In quote
style.tcl.5=$(colour.string),back:#FFf0f0,eolfilled
# operator
style.tcl.6=$(colour.operator),bold
# Identifiers
style.tcl.7=$(colour.keyword)
# Substitution
style.tcl.8=$(colour.preproc)
# Substitution starts with a brace ${woow}
style.tcl.9=$(colour.preproc),back:#effff0
# Modifier -xxx
style.tcl.10=$(colour.char)
# Expand (what and odd syntax)
style.tcl.11=$(colour.keyword),back:#FFFF80,bold
# Keywords
style.tcl.12=$(colour.keyword),bold
# Keywords 2
style.tcl.13=$(colour.keyword),back:#e0ffff,bold
# Keywords 3
style.tcl.14=$(colour.keyword),back:#FFf0f0,bold
# Keywords 4
style.tcl.15=$(colour.keyword),back:#FFD0D0,bold
# Other keywords (bozo test colors :-)
# Keywords 5
style.tcl.16=$(style.tcl.7),back:#FFD0FF,bold
# Keywords 6
style.tcl.17=$(style.tcl.7),back:#FFFFD0,bold
# Keywords 7
style.tcl.18=$(style.tcl.7),back:#FFA0A0,bold,
# Keywords 8
style.tcl.19=$(style.tcl.7),back:#FFD0D0
#comment box
style.tcl.20=$(colour.code.comment.box),$(font.code.comment.box),back:#f0FFf0,eolfilled
#comment block
style.tcl.21=$(colour.embedded.comment),$(font.embedded.comment),back:#f0FFf0

# Matched Operators
style.tcl.34=fore:#f0f0f0,bold,back:#7070ff
style.tcl.35=fore:#FF0000,bold,back:#FF00FF

# Braces are only matched in operator style
braces.tcl.style=6
