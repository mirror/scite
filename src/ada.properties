# Define SciTE settings for Ada files.

filter.ada=Ada (ads adb)|*.ads;*.adb|

*filter.ada=$(filter.ada)

file.patterns.ada=*.ads;*.adb

lexer.$(file.patterns.ada)=ada

*language.ada=Ada|ads||

#indent.size.$(file.patterns.ada)=3
#use.tabs.$(file.patterns.ada)=0

# Keyword except of operator keywords
keywordclass.ada.main=abort abstract accept access aliased all array at begin body \
case constant declare delay delta digits do else elsif end entry exception exit for \
function generic goto if in is limited loop new null of others out package pragma \
private procedure protected raise range record renames requeue return reverse \
select separate subtype tagged task terminate then type until use when while with
# Keywords for operators
keywordclass.ada.operators=abs and mod not or rem xor

keywordclass.ada=$(keywordclass.ada.main) $(keywordclass.ada.operators)

keywords.$(file.patterns.ada)=$(keywordclass.ada)

# Ada styles
# Default
style.ada.0=fore:#808080
# Keyword
style.ada.1=$(colour.keyword),bold
# Identifiers
style.ada.2=
# Number
style.ada.3=$(colour.number)
# Operators (delimiters)
style.ada.4=$(colour.operator),bold
# Character
style.ada.5=$(colour.char)
# End of line where character is not closed
style.ada.6=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# String
style.ada.7=$(colour.string)
# End of line where string is not closed
style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Label
style.ada.9=fore:#7F0000
# Comment
style.ada.10=$(colour.code.comment.line),$(font.code.comment.line)
# Illegal token
style.ada.11=fore:#FF0000

# Comments
comment.block.ada=--~

braces.ada.style=4

statement.indent.$(file.patterns.ada)=1 begin declare else elsif exception for if is loop while
statement.lookback.$(file.patterns.ada)=20
block.start.$(file.patterns.ada)=10 then is
block.end.$(file.patterns.ada)=10 end

calltip.ada.word.characters=._$(chars.alpha)

adagcc=gcc -c $(FileNameExt)

command.compile.*.ads=$(adagcc)
command.build.*.ads=gnatmake
command.go.*.ads=$(FileName)

command.compile.*.adb=$(adagcc)
command.build.*.adb=gnatmake
command.go.*.adb=$(FileName)
