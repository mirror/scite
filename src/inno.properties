# Define SciTE settings for Inno Setup script files.

file.patterns.inno=*.iss;*.isl

filter.inno=Inno Setup (iss isl)|$(file.patterns.inno)|

*filter.inno=$(filter.inno)

lexer.$(file.patterns.inno)=inno

*language.innosetup=&InnoSetup|iss||

comment.block.inno=;~

# Sections
keywords.$(file.patterns.inno)=\
 code components custommessages dirs files icons ini installdelete \
 langoptions languages messages registry run setup types tasks \
 uninstalldelete uninstallrun _istool

# Keywords
keywords2.$(file.patterns.inno)=\
 allowcancelduringinstall allownoicons allowrootdirectory allowuncpath \
 alwaysrestart alwaysshowcomponentslist alwaysshowdironreadypage \
 alwaysshowgrouponreadypage alwaysusepersonalgroup appcomments appcontact \
 appcopyright appid appmodifypath appmutex appname apppublisher \
 apppublisherurl appreadmefile appsupportphone appsupporturl appupdatesurl \
 appvername appversion appenddefaultdirname appenddefaultgroupname \
 architecturesallowed architecturesinstallin64bitmode backcolor backcolor2 \
 backcolordirection backsolid changesassociations changesenvironment \
 compression compressionthreads copyrightfontname copyrightfontsize \
 createappdir createuninstallregkey defaultdirname defaultgroupname \
 defaultuserinfoname defaultuserinfoorg defaultuserinfoserial dialogfontname \
 dialogfontsize dialogfontstandardheight direxistswarning disabledirpage \
 disablefinishedpage disableprogramgrouppage disablereadymemo \
 disablereadypage disablestartupprompt diskclustersize diskslicesize \
 diskspanning dontmergeduplicatefiles enabledirdoesntexistwarning encryption \
 extradiskspacerequired flatcomponentslist infoafterfile infobeforefile \
 internalcompresslevel languagecodepage languagedetectionmethod languageid \
 languagename licensefile mergeduplicatefiles messagesfile minversion \
 onlybelowversion outputbasefilename outputdir outputmanifestfile password \
 privilegesrequired reservebytes restartifneededbyrun righttoleft \
 setupiconfile setuplogging showcomponentsizes showlanguagedialog \
 showtaskstreelines showundisplayablelanguages signtool signeduninstaller \
 signeduninstallerdir slicesperdisk solidcompression sourcedir \
 terminalservicesaware timestamprounding timestampsinutc titlefontname \
 titlefontsize touchdate touchtime uninstalldisplayicon uninstalldisplayname \
 uninstallfilesdir uninstalliconfile uninstalllogmode \
 uninstallrestartcomputer uninstallstyle uninstallable \
 updateuninstalllogappname usepreviousappdir usepreviousgroup \
 useprevioussetuptype useprevioustasks useprevioususerinfo usesetupldr \
 userinfopage versioninfocompany versioninfocopyright versioninfodescription \
 versioninfoproductname versioninfoproductversion versioninfotextversion \
 versioninfoversion welcomefontname welcomefontsize windowresizable \
 windowshowcaption windowstartmaximized windowvisible wizardimagebackcolor \
 wizardimagefile wizardimagestretch wizardsmallimagebackcolor \
 wizardsmallimagefile wizardstyle

# Parameters
keywords3.$(file.patterns.inno)=\
 afterinstall attribs beforeinstall check comment components copymode \
 description destdir destname excludes externalsize extradiskspacerequired \
 filename flags fontinstall groupdescription hotkey iconfilename iconindex \
 key languages minversion name onlybelowversion parameters permissions root \
 runonceid section source statusmsg string subkey tasks type types valuedata \
 valuename valuetype verb workingdir

# Preprocessor directives
keywords4.$(file.patterns.inno)=\
 append define dim elif else emit endif endsub error expr file for if ifdef \
 ifexist ifndef ifnexist include insert pragma sub undef

# Pascal keywords
keywords5.$(file.patterns.inno)=\
 begin break case const continue do downto else end except finally for \
 function if of procedure repeat then to try until uses var while with

# User defined keywords
keywords6.$(file.patterns.inno)=

# Properties styles

# Default
style.inno.0=
# Comment
style.inno.1=fore:#007F7F,$(font.comment)
# Keyword
style.inno.2=$(colour.keyword)
# Parameter
style.inno.3=$(colour.string)
# Section
style.inno.4=back:#FFFFC0
# Preprocessor
style.inno.5=$(colour.preproc)
# Preprocessor (inline)
style.inno.6=$(colour.preproc)
# Pascal comment
style.inno.7=fore:#007F7F,$(font.comment)
# Pascal keyword
style.inno.8=$(colour.keyword)
# User defined keyword
style.inno.9=$(colour.keyword)
# Double quoted string
style.inno.10=$(colour.string)
# Single quoted string
style.inno.11=$(colour.char)
# Identifier - lexer internal. It is an error if any text is in this style.
style.inno.12=back:#FF0000

#if PLAT_WIN
#	# Replace PATH_TO_INNOSETUP by the path to your InnoSetup installation
#	command.compile.$(file.patterns.inno)="PATH_TO_INNOSETUP\iscc.exe" $(FileNameExt)
#	command.go.$(file.patterns.inno)="PATH_TO_INNOSETUP\Compil32.exe" $(FileNameExt)
