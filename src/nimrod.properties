# Define SciTE settings for Nimrod files.

file.patterns.nimrod=*.nim

shbang.nimrod=nim

filter.nimrod=Nimrod (nim)|$(file.patterns.nimrod)|

*filter.nimrod=$(filter.nimrod)

lexer.$(file.patterns.nimrod)=nimrod

keywordclass.nimrod=addr and as asm \
block break \
case cast const continue converter \
discard div \
elif else end enum except exception \
finally for from generic \
if implies import in include is isnot iterator \
lambda \
macro method mod \
nil not notin \
object of or out \
proc ptr \
raise ref return \
shl shr \
template try tuple type \
var \
when where while with without \
xor \
yield

keywords.$(file.patterns.nimrod)=$(keywordclass.nimrod)

#~ statement.indent.$(file.patterns.nimrod)=10 :
statement.indent.$(file.patterns.nimrod)=5 elif else except finally of \
for if try while

statement.lookback.$(file.patterns.nimrod)=0
block.start.$(file.patterns.nimrod)=
block.end.$(file.patterns.nimrod)=

view.indentation.examine.*.nim=2

#fold.quotes.nimrod=1

comment.block.nimrod=#~

# nimrod styles
# White space
style.nimrod.0=fore:#808080
# Comment
style.nimrod.1=fore:#007F00,$(font.comment)
# Number
style.nimrod.2=fore:#007F7F
# String
style.nimrod.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.nimrod.4=fore:#7F007F,$(font.monospace)
# Keyword
style.nimrod.5=fore:#00007F,bold
# Triple quotes
style.nimrod.6=fore:#7F0000
# Triple double quotes
style.nimrod.7=fore:#7F0000
# Class name definition
style.nimrod.8=fore:#0000FF,bold
# Function or method name definition
style.nimrod.9=fore:#007F7F,bold
# Operators
style.nimrod.10=bold
# Identifiers
style.nimrod.11=
# Comment-blocks
style.nimrod.12=fore:#7F7F7F
# End of line where string is not closed
style.nimrod.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Highlighted identifiers
style.nimrod.14=fore:#407090
# Decorators
style.nimrod.15=fore:#805000
# Matched Operators
style.nimrod.34=fore:#0000FF,bold
style.nimrod.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.nimrod.style=10

if PLAT_WIN
	command.go.*.nim=nimrod c -r "$(FileNameExt)"
	command.go.subsystem.*.nim=1

if PLAT_GTK
	command.go.*.nim=nimrod c -r "$(FileNameExt)"

command.name.1.*.nim=Syntax Check
command.1.*.nim=nimrod check "$(FilePath)"

# compile
command.compile.*.nim=nimrod c "$(FilePath)"

# build
command.build.*.nim=nimrod --forcebuild "$(FilePath)"
command.build.subsystem.*.nim=1


